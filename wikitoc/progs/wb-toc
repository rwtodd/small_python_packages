#!/usr/bin/env python3
from rwt.wikitoc import book as wb, xml as wxml

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description="Convert an XML representation to a wikibook table of contents")
    parser.add_argument('--nav-template', action='store_true', help="Print the code for the generic navigation template")
    parser.add_argument('--xml-template', action='store_true', help="Print a starter XML file.")
    parser.add_argument('-p', '--page-wrappers', action='store_true', help="Print the page wrappers.")
    parser.add_argument('-s', '--skeleton-files', action='store_true', help="Put page wrappers in skeleton files")
    parser.add_argument('-c', '--contents', action='store_true', help="Just print out the contents page")
    parser.add_argument('filename', type=str, default=None, nargs='?')

    args = parser.parse_args()

    if args.nav_template:
        print(wb.generate_nav_page())

    if args.xml_template:
        print('''<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<book tocCategory="??? WikiBooks">
  <!-- the table of contents will be a page named via <title> below, in category 'tocCategory'-->
  <!-- tocCategory will usually end in ' WikiBooks'-->
  <author>???</author>
  <title navtitle="???" short="???" url="???">???</title>
  <date>???</date>
  <chapters navtemplate="Generic WikiBook Nav">
    <!-- each chapter page will be in a category named after <title> and use a navigation template named by 'navtemplate' -->
    <raw>???</raw>
    <c short="???" url="???">???</c>
  </chapters>
</book>''')

    if args.filename is None:
        import sys
        sys.exit(0)

    wb = wxml.parse_xml(args.filename)
    if args.contents:
        print(wb.TOC.make_page_template())

    if args.page_wrappers:
        for pg in wb.pages:
            print()
            print(f'~~~~~~~~~~{pg.file_name[:-9]:^60}~~~~~~~~~~')
            print(pg.make_page_template())

    if args.skeleton_files:
        with open(wb.TOC.file_name, 'w') as f:
            f.write(wb.TOC.make_page_template())

        for pg in wb.pages:
            with open(pg.file_name,'w') as f:
                f.write(pg.make_page_template())

# vim: ft=python
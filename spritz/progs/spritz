#!/usr/bin/env python3
# use from a venv that has the `requests` module installed.
from rwt.spritz.hash import hash_file

def hash(args):
    import base64
    for file in args.filename:
        result = hash_file(file, args.size // 8)
        if args.base64:
            print(f'{base64.standard_b64encode(result).decode('ASCII')}: {file}')
        else:
            print(f'{result.hex()}: {file}')

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description="Spritz cipher utility")
    subparsers = parser.add_subparsers(dest="command", help="Available commands")
    hash_parser = subparsers.add_parser('hash', help="Hash files")
    hash_parser.add_argument('-s','--size', type=int, default=256, help="Size of the hash, in bits (default: 256)")
    hash_parser.add_argument('-b','--base64', action="store_true", help="Display the has in base64, rather than hex")
    hash_parser.add_argument('filename', type=str, default=None, nargs='*')
    args = parser.parse_args()
    if args.command == "hash":
        hash(args)
    else:
        raise SystemExit('Bad command!')
